package mint.com;

/**
 * Worker - parent class for Employee and Contractor
 */
public abstract class Worker {

    static int age = 21;

     int id;
     String name;
     double salary;

    public Worker(int id, String name){
        this.id = id;
        this.name = name;
    }

    public int getId(){
    	return id;
    }
    
    public String getName(){
    	return name;
    }
    
    public Double getSalary(){
    	return salary;
    }

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + id;
		result = prime * result + ((name == null) ? 0 : name.hashCode());
		long temp;
		temp = Double.doubleToLongBits(salary);
		result = prime * result + (int) (temp ^ (temp >>> 32));
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Worker other = (Worker) obj;
		if (id != other.id)
			return false;
		if (name == null) {
			if (other.name != null)
				return false;
		} else if (!name.equals(other.name))
			return false;
		if (Double.doubleToLongBits(salary) != Double.doubleToLongBits(other.salary))
			return false;
		return true;
	}
	
// equals and hashCode methods, generated by IntelliJ IDEA
	
//    @Override
//    public boolean equals(Object o) {
//        if (this == o) return true;
//        if (o == null || getClass() != o.getClass()) return false;
//
//        Worker worker = (Worker) o;
//
//        if (id != worker.id) return false;
//        if (Double.compare(worker.salary, salary) != 0) return false;
//        if (name != null ? !name.equals(worker.name) : worker.name != null) return false;
//
//        return true;
//    }
//
//    @Override
//    public int hashCode() {
//        int result;
//        long temp;
//        result = id;
//        result = 31 * result + (name != null ? name.hashCode() : 0);
//        temp = Double.doubleToLongBits(salary);
//        result = 31 * result + (int) (temp ^ (temp >>> 32));
//        return result;
//    }
}
